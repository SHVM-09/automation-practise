name: Deploy - Demos
run-name: ${{ inputs.is_production && 'üöÄ' || 'üß™' }} Deploy - Demos
env:
  # ‚ùó `VERCEL_ORG_ID` will be team id if project is under a team
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  NITRO_PRESET: vercel

on:
  workflow_dispatch:
    inputs:
      is_production:
        type: boolean
        description: Is production deployment

jobs:
  deployment:
    runs-on: ubuntu-latest
    steps:
      - name: ‚öôÔ∏è Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: ‚öôÔ∏è Set BRAND_NAME environment variable from repo name
        run: echo BRAND_NAME=${{ github.event.repository.name }} | cut -d '-' -f1 >> $GITHUB_ENV

      - name: ‚¨áÔ∏è Checkout template
        uses: actions/checkout@v3
        with:
          path: ${{ env.BRAND_NAME }}/nuxt

      - name: ‚¨áÔ∏è Checkout scripts
        uses: actions/checkout@v3
        with:
          repository: themeselection/automation-scripts
          token: ${{ secrets.GH_PAT }}
          path: automation-scripts

      - name: ‚¨áÔ∏è Install packages in automation-scripts dir
        working-directory: automation-scripts/vue
        run: pnpm i

      - name: ‚¨áÔ∏è Install packages in typescript full version
        working-directory: ${{ env.BRAND_NAME }}/nuxt/typescript-version/full-version
        run: pnpm i

      - name: ‚öôÔ∏è Setup Vercel Environment Variables
        working-directory: ${{ env.BRAND_NAME }}/nuxt/typescript-version/full-version
        run: vercel env pull --yes --environment $([[ "${{ inputs.is_production }}" == "true" ]] && echo production || echo preview) --token ${{ secrets.VERCEL_TOKEN }}

      - name: üõ†Ô∏è Prepare for build command
        working-directory: automation-scripts/vue
        run: pnpm tsx src/templates/${{ env.BRAND_NAME }}/scripts/genNuxtDemos.ts

      - name: üì¶ Build
        working-directory: ${{ env.BRAND_NAME }}/nuxt
        run: vercel build --yes --token ${{ secrets.VERCEL_TOKEN }} $([[ "${{ inputs.is_production }}" == "true" ]] && echo --prod)

      - name: üöÄ Deploy to Vercel
        working-directory: ${{ env.BRAND_NAME }}/nuxt
        run: vercel deploy --prebuilt --token ${{ secrets.VERCEL_TOKEN }} $([[ "${{ inputs.is_production }}" == "true" ]] && echo --prod)
